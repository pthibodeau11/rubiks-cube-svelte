{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../docs/Nav.svelte","../node_modules/@sveltecasts/svelte-youtube/src/index.svelte","../docs/Steps.svelte","../docs/Timer/utils.js","../node_modules/svelte/store/index.mjs","../node_modules/svelte/easing/index.mjs","../docs/Timer/Stopwatch.svelte","../node_modules/svelte/transition/index.mjs","../node_modules/svelte/animate/index.mjs","../docs/Timer/Laps.svelte","../docs/Timer/Controls.svelte","../docs/Timer/stores.js","../docs/Timer/App2.svelte","../docs/App.svelte","../docs/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    let unsubscribe;\n    if (is_crossorigin()) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        detach(iframe);\n        if (unsubscribe)\n            unsubscribe();\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.22.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n    let src = './images/rubik_gif.gif';\n    export let page = 'Home'\n    function setPage(i) {\n\t\tpage = i\n\t} \n</script>\n\n<div\n    class=\"NavBar\"\n>\n    <div\n        class=\"TitleContainer\"\n    >\n        <img {src} alt=\"rubik gif\">\n        <div\n            class=\"Title\"\n        >\n            <h4>Guide:</h4>\n            <h1>How to Solve a Rubik's Cube</h1>\n        </div>\n    </div>\n    <div\n        class=\"NavLinks\"\n    >\n        <li on:click=\"{() => setPage('Home')}\">Home</li>\n        <li on:click=\"{() => setPage('Timer')}\">Timer</li>\n        <li>Purchase Cube</li>\n    </div>\n</div>\n\n\n<style>\n    .NavBar {\n        height: 125px;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        font-family: 'Helvetica Neue';\n        position: fixed;\n        top: 0;\n        width: 100%;\n        z-index: 10000;\n        background-color: white;\n        margin-top: -8px;\n    }\n    .NavLinks {\n        /* height: 400px; */\n        display: flex;\n        flex-direction: row;\n        margin-right: 50px;\n        margin-top: 25px;\n        font-family: 'Helvetica Neue';\n        font-size: 16px;\n        margin-bottom: 80px;\n    }\n    .TitleContainer {\n        display: flex;\n        flex-direction: row;\n    }\n    .Title {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        margin-top: 18px;\n    }\n\n    h1 {\n        margin: 0;\n        font-size: 28px;\n        font-family: 'Helvetica Neue';\n\n    }\n\n    h4 {\n        margin: 0;\n        font-weight: normal;\n        font-family: 'Helvetica Neue';\n\n    }\n\n    li {\n        list-style-type: none;\n        padding-right: 12px;\n        margin-left: 25px;\n        font-family: 'Helvetica Neue';\n        cursor: pointer;\n    }\n\n    li:hover{\n        color: #E1494A\n    }\n\n    img {\n        height: 200px;\n        margin-left: -50px;\n        margin-top: -25px;\n        margin-right: -50px;\n    }\n\n</style>\n\n","<script context=\"module\">\n  let YouTubeIframeAPIReady = false;\n</script>\n\n<script>\n  let player;\n  import { createEventDispatcher, onMount } from \"svelte\";\n  const dispatch = createEventDispatcher();\n  let divId = \"player_\" + parseInt(Math.random() * 100000).toString();\n  export let videoId;\n  export let height = \"390\";\n  export let width = \"640\";\n\n  onMount(() => {\n    let ytTagUrl = \"https://www.youtube.com/iframe_api\";\n    if (!isMyScriptLoaded(ytTagUrl)) {\n      // 2. This code loads the IFrame Player API code asynchronously.\n      var tag = document.createElement(\"script\");\n      tag.src = ytTagUrl;\n      var firstScriptTag = document.getElementsByTagName(\"script\")[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    }\n\n    window.onYouTubeIframeAPIReady = function() {\n      //console.log('hello')\n      window.dispatchEvent(new Event(\"YouTubeIframeAPIReady\"));\n    };\n\n    window.addEventListener(\"YouTubeIframeAPIReady\", function() {\n      if (YouTubeIframeAPIReady == false) {\n        // first load of an YT Video on this project\n        YouTubeIframeAPIReady = true; // now the Player can be created\n        createPlayer();\n      }\n    });\n    function createPlayer() {\n      player = new YT.Player(divId, {\n        height,\n        width,\n        videoId: videoId,\n        events: {\n          //'onReady': onPlayerReady,\n          onStateChange: onPlayerStateChange\n        }\n      });\n    }\n    if (YouTubeIframeAPIReady) {\n      createPlayer(); // if the YT Script is ready, we can create our player\n    }\n  });\n\n  function isMyScriptLoaded(url = \"\") {\n    var scripts = document.getElementsByTagName(\"script\");\n    for (var i = scripts.length; i--; ) {\n      if (scripts[i].src == url) return true;\n    }\n    return false;\n  }\n\n  function onPlayerStateChange({ data }) {\n    dispatch(\"StateChange\", data);\n  }\n  export function playVideo() {\n    player.playVideo();\n  }\n</script>\n\n<div class=\"yt-component\">\n  <div id={divId} />\n</div>\n","<script>\n    export let steps;\n\t\n\tfunction step(i = 0) {\n\t\tsteps.children[i-1].scrollIntoView({ behavior: 'smooth', block: 'start' });\n\t\t//console.log(offset);\n    }\n    import Youtube from \"@sveltecasts/svelte-youtube\";\n    let daisy = './images/daisy.png';\n    let secondLayerStuck = \"./images/second_layer_stuck.png\";\n    let secondLayer = \"./images/second_layer.png\";\n    let whiteBottomLeft = \"./images/white_bottom_left_corner.png\";\n    let whiteBottomRow = \"./images/white_bottom_row_corner.png\";\n    let whiteCross = \"./images/white_cross.png\";\n    let whiteTopCorner = \"./images/white_top_corner.png\";\n    let whiteTopFaceCorner = \"./images/white_top_face_corner.png\";\n    let yellowCrossComplete = \"./images/yellow_cross_complete.png\";\n    let yellowCrossL = \"./images/yellow_cross_l.png\";\n    let yellowCrossNoEdge = \"./images/yellow_cross_no_edge.png\";\n    let yellowCrossStraightLine = \"./images/yellow_cross_straight_line.png\";\n    let yellowFaceFish = \"./images/yellow_face_fish.png\";\n    let yellowFaceNoFish = \"./images/yellow_face_no_fish.png\";\n    let cornersNoMatching = \"./images/corners_no_matching.png\"\n    let cornersMatching = \"./images/corners_matching.png\";\n    let finalSolved = \"./images/final_solved.png\"\n</script>\n\n<main>\n\t<section\n\t\tclass=\"left\"\n\t>\n\t\t<ul>\n            <li on:click=\"{() => step(1)}\">01. Get to know your Rubik's Cube</li>\n            <li on:click=\"{() => step(2)}\">02. Make the Daisy</li>\n            <li on:click=\"{() => step(3)}\">03. Create the White Cross</li>\n            <li on:click=\"{() => step(4)}\">04. Solve the Bottom Layer</li>\n            <li on:click=\"{() => step(5)}\">05. Solve the Second Layer</li>\n            <li on:click=\"{() => step(6)}\">06. Create the Yellow Cross</li>\n            <li on:click=\"{() => step(7)}\">07. Solve the Yellow Face</li>\n            <li on:click=\"{() => step(8)}\">08. Position the Corners</li>\n            <li on:click=\"{() => step(9)}\">09. Position the Final Edges</li>\n        </ul>\n\t</section>\n\t<section\n\t\tclass=\"right\"\n\t>\n        <div class=\"steps\">\n\t        <div class=\"track\" bind:this=\"{steps}\">\n                <div class=\"step1\">\n                    <div\n                        class=\"headerContainer1\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            01\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Get to know your Rubik's Cube\n                        </div>\n                    </div>\n                    <div\n                        class=\"middle1\"\n                    >\n                        <Youtube videoId=\"R-R0KrXvWbc\" />\n                    </div>\n                    <div\n                        class=\"bottom1\"\n                    >\n                        <p>This video provides a step-by-step tutorial for solving the Rubik's Cube. Also included is a basic understanding of the Rubik's Cube that will set you up nicely for this guide.</p>\n                    </div>\n                </div>\n                <div class=\"step2\">\n                    <div\n                        class=\"headerContainer\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            02\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Make the Daisy\n                        </div>\n                    </div>\n                    <div\n                        class=\"middle2\"\n                    >\n                        <div\n                            class=\"middle2text\"\n                        >\n                            <p>For this step, simply do whatever you need to get the middle white square to be surrounded by 4 yellow stickers on each edge.</p>\n                        </div>\n                        <img src={daisy} alt=\"daisy goes here\" >\n                    </div>\n                    <div\n                        class=\"bottom2\"\n                    >\n                    </div>\n                </div>\n                <div class=\"step3\">\n                    <div\n                        class=\"headerContainer\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            03\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Create the White Cross\n                        </div>\n                    </div>\n                    <div\n                        class=\"middle2\"\n                    >\n                        <div\n                            class=\"middle2text\"\n                        >\n                            <p>Align each white edge piece (on the top of the cube) so it’s adjacent color is matched to the color in the middle of each side.</p>\n                            <p style=\"font-style: italic;\">In this example above, on the right side red is already matched to the red in the middle of that side. However, on the left side, the orange is not – it’s matched to blue. </p>\n                            <p style=\"padding-top: 10px;\">If the colors are matched, turn the face of that side 2 times.</p>\n                            <p>If the colors are not matched, rotate the top until they do match. When they match, turn that side 2 times.</p>\n                            <p>Repeat this for each white edge piece</p>\n                        </div>\n                        <img src={whiteCross} alt=\"daisy goes here\" >\n                    </div>\n                    <div\n                        class=\"bottom2\"\n                    >\n                            <p>If done correctly, you should have a white cross on the bottom and each white edges’ adjacent color will be matched properly to the middle color on each side</p>\n                    </div>\n                </div>\n                <div class=\"step4\">\n                    <div\n                        class=\"headerContainer\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            04\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Solve the Bottom Layer\n                        </div>\n                    </div>\n                            <p>Start by flipping the cube over so that the yellow middle sticker is point up. You will keep the yellow sticker pointing up for the remainder of the solve.</p>\n                    <div\n                        class=\"middle4\"\n                    >\n                        <div\n                            class=\"middle4text\"\n                        >\n                            <p style=\"text-decoration: underline\"> WHITE STICKER(s) ON TOP ROW CORNER</p>\n                            <p>First, look for white stickers on the top layer facing outward. When found, rotate the top row (if necessary) so that its right adjacent sticker is matched to the color of that side. </p>\n                            <p>Perform the <span style=\"font-weight: bold\">LEFT TRIGGER</span> move since the white/red sticker is to the top/left of the red middle sticker. </p>\n                            <p>If the red sticker was to the top/right of red middle sticker, perform the <span style=\"font-weight: bold\">RIGHT TRIGGER </span> move.</p>\n                            <p>Repeat this for all the top row corner pieces</p>\n                        </div>\n                        <img src={whiteTopCorner} alt=\"top white goes here\" >\n                    </div>\n                    <div\n                        class=\"middle4\"\n                    >\n                        <div\n                            class=\"middle4text\"\n                        >\n                            <p style=\"text-decoration: underline\"> WHITE STICKER(s) ON THE TOP FACE CORNER</p>\n                            <p>First, check to make that the white stick on top is directly above an empty white spot on the bottom of the cube. If it’s not, rotate the top row so that it is. </p>\n                            <p>Once aligned above an empty white spot, perform either the  <span style=\"font-weight: bold\">RIGHT or LEFT TRIGGER</span> move (depending on how you’re holding the cube) – just make sure your starting the trigger move on the side with the white sticker.</p>\n                            <p>After you’ve done the trigger move twice. You should now have a white sticker on the top row on a side corner. With that in place, perform the steps when you have a white sticker on the top row on a side corner.</p>\n                        </div>\n                        <img src={whiteTopFaceCorner} alt=\"top white face goes here\" >\n                    </div>\n                    <div\n                        class=\"middle4\"\n                    >\n                        <div\n                            class=\"middle4text\"\n                        >\n                            <p style=\"text-decoration: underline\"> WHITE STICKER(s) ON BOTTOM ROW CORNER</p>\n                            <p>If the white sticker is on a bottom right corner, perform the <span style=\"font-weight: bold\"> RIGHT TRIGGER</span> </p>\n                        </div>\n                        <img src={whiteBottomRow} alt=\"white cross goes here\" >\n                    </div>\n                    <div\n                        class=\"middle4\"\n                    >\n                        <div\n                            class=\"middle4text\"\n                        >\n                            <p>If the white sticker is on a bottom left corner, perform the <span style=\"font-weight: bold\"> LEFT TRIGGER</span> </p>\n                        </div>\n                        <img src={whiteBottomLeft} alt=\"white cross goes here\" >\n                    </div>\n                    <div\n                        class=\"bottom4\"\n                    >\n                            <p>After performing either one of the previous moves, there will now be a white sticker on the top face. As such, perform the step above for <span style=\"text-decoration: underline\">WHITE STICKERS ON TOP FACE CORNER</span></p>\n                    </div>\n                </div>\n                <div class=\"step5\">\n                    <div\n                        class=\"headerContainer\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            05\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Solve the Second Layer\n                        </div>\n                    </div>\n                        <p>At this point you should now have a completely white bottom and the first layer solved. For this step, you should be focusing on top row and the top face edge pieces. </p>\n                    <div\n                        class=\"middle5\"\n                    >\n                        <div\n                            class=\"middle5text\"\n                        >\n                            <p>First, look for a top edge piece and its corresponding adjacent color that does NOT have a yellow sticker. For example, in the picture below, look for orange/green combo, green/red, or orange/blue.</p>\n                            <p>When found, rotate the top row so that the top row middle face color matches to the color in the middle of the face.</p>\n                            <!-- <p></p>\n                            <p></p>\n                            <p></p> -->\n                        </div>\n                        <img src={secondLayer} alt=\"white cross goes here\" >\n                    </div>\n                    <div\n                        class=\"middle5\"\n                    >\n                        <div\n                            class=\"middle5text\"\n                        >\n                            <p>Next, look at the color of the sticker on the top face (in this example, orange). Since orange is the right face, you’ll first <span style=\"font-weight: bold\">rotate the top row clockwise 1x</span> and then perform the<span style=\"font-weight: bold\">RIGHT TRIGGER</span> move.</p>\n                            <p>Then, perform the move when <span style=\"text-decoration: underline\">WHITE STICKER ON TOP ROW CORNER</span></p>\n                            <p style=\"font-style: italic\">**Note: if the color of the sticker on the top face was on the left face, then you would rotate the top row counter-clockwise 1x and then perform the LEFT TRIGGER move </p>\n                            <p>Continue to repeat until either A) All top row edge piece color combinations include a yellow sticker or B) the 2nd row is solved.</p>\n                            <p>IF… A). all top row edge piece color combinations include a yellow sticker (see below), then you’ll need to perform either the <span style=\"font-weight: bold\"> RIGHT TRIGGER or LEFT TRIGGER </span>on a side with a missing 2nd row piece. After you perform the trigger move, it should allow you perform the previous moves in this step to complete the 2nd row.</p>\n                        </div>\n                        <img src={secondLayerStuck} alt=\"white cross goes here\" >\n                    </div>\n                    <div\n                        class=\"bottom5\"\n                    >\n                            <p></p>\n                    </div>\n                </div>\n                <div class=\"step6\">\n                    <div\n                        class=\"headerContainer\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            06\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Create the Yellow Cross\n                        </div>\n                    </div>\n                        <p>When you get this step, you may have 1 of the following scenarios</p>\n                    <div\n                        class=\"middle6\"\n                    >\n                        <div\n                            class=\"middle6text\"\n                        >\n                            <p style=\"text-decoration: underline\">A) No Yellow edge pieces on top</p>\n                            <p style=\"font-weight: bold\"> F U R U’ R’ F’</p>\n                            <p></p>\n                            <p></p>\n                        </div>\n                        <img src={yellowCrossNoEdge} alt=\"yellow cross no edge goes here\" >\n                    </div>\n                    <div\n                        class=\"middle6\"\n                    >\n                        <div\n                            class=\"middle6text\"\n                        >\n                            <p style=\"text-decoration: underline\">B) Two yellow edges pieces that form a straight line</p>\n                            <p>Turn the top row (if necessary) so that it forms a straight line - from your perspective. Then...</p>\n                            <p style=\"font-weight: bold\"> F U R U’ R’ F’</p>\n                            <p></p>\n                            <p></p>\n                        </div>\n                        <img src={yellowCrossStraightLine} alt=\"yellow cross straight goes here\" >\n                    </div>\n                    <div\n                        class=\"middle6\"\n                    >\n                        <div\n                            class=\"middle6text\"\n                        >\n                            <p style=\"text-decoration: underline\">C) Two edge pieces that form an L</p>\n                            <p>Rotate the top row (if necessary) so that the edge pieces are at 12 and 9 - from your perspective</p>\n                            <p style=\"font-weight: bold\"> F U R U’ R’ F’</p>\n                            <p></p>\n                            <p></p>\n                        </div>\n                        <img src={yellowCrossL} alt=\"yellow cross L goes here\" >\n                    </div>\n                    <p>** Continue to repeat until you have a yellow cross on top</p>\n                    <div\n                        class=\"middle6\"\n                    >\n                        <div\n                            class=\"middle6text\"\n                        >\n                            <p></p>\n                            <p></p>\n                            <p></p>\n                            <p></p>\n                            <p></p>\n                        </div>\n                        <img src={yellowCrossComplete} alt=\"yellow cross complete goes here\" >\n                    </div>\n                    <div\n                        class=\"bottom6\"\n                    >\n                            <p>Note… you may have extra yellow corner pieces (this is okay – repeat steps above until you have a yellow cross).</p>\n                    </div>\n                </div>\n                <div class=\"step7\">\n                    <div\n                        class=\"headerContainer\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            07\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Solve the Yellow Face\n                        </div>\n                    </div>\n                    <p>Once you have a yellow cross, inspect the top face.</p>\n                    <div\n                        class=\"middle7\"\n                    >\n                        <div\n                            class=\"middle7text\"\n                        >\n                            <p style=\"text-decoration: underline\">Fish Pattern</p>\n                            <p>If there are three empty corners on the top face, it will look like a “fish” pattern. If you have the fish pattern, rotate the top so that the mouth is down and to the left. </p>\n                            <p>Then, perform this algorithm</p>\n                            <p style=\"font-weight: bold\"> R U R' U R U2 R'</p>\n                        </div>\n                        <img src={yellowFaceFish} alt=\"yellow face goes here\" >\n                    </div>\n                    <div\n                        class=\"middle7\"\n                    >\n                        <div\n                            class=\"middle7text\"\n                        >\n                            <p style=\"text-decoration: underline\">No Fish Pattern</p>\n                            <p>If you have zero or two yellow corner stickers, rotate the top of the cube so that you have a yellow sticker in the upper right corner of the left face. </p>\n                            <p>Then, perform this algorithm</p>\n                            <p style=\"font-weight: bold\"> R U R' U R U2 R'</p>\n                        </div>\n                        <img src={yellowFaceNoFish} alt=\"yellow no fish face goes here\" >\n                    </div>\n                    <div\n                        class=\"bottom7\"\n                    >\n                            <p>Note: You may need to repeat the “fish” pattern 2x</p>\n                    </div>\n                </div>\n                <div class=\"step8\">\n                    <div\n                        class=\"headerContainer\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            08\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Position the Corners\n                        </div>\n                    </div>\n                    <p>At this point, you should have a fully completed top yellow face. Now, the goal of this step is to have one side with matching top corner stickers. </p>\n                    <div\n                        class=\"middle8\"\n                    >\n                        <div\n                            class=\"middle8text\"\n                        >\n                            <p>If there are no matching top corner pieces...</p>\n                            <p>Perform this algorithm</p>\n                            <p style=\"font-weight: bold\"> L’ U R U’ L U R’ R U R’ U R U2 R’</p>\n                            <p></p>\n                        </div>\n                        <img src={cornersNoMatching} alt=\"corner positions goes here\" >\n                    </div>\n                    <div\n                        class=\"middle8\"\n                    >\n                        <div\n                            class=\"middle8text\"\n                        >\n                            <p>If there is a side that has matching corner colors, rotate the top layer so that it is aligned with the corresponding face and position it so that face is in your left hand. </p>\n                            <p>Then, perform the same algorithm</p>\n                            <p style=\"font-weight: bold\"> L’ U R U’ L U R’ R U R’ U R U2 R’</p>\n                            <p></p>\n                        </div>\n                        <img src={cornersMatching} alt=\"corner positions goes here\" >\n                    </div>\n                    <div\n                        class=\"bottom8\"\n                    >\n                            <p></p>\n                    </div>\n                </div>\n                <div class=\"step9\">\n                    <div\n                        class=\"headerContainer\"\n                    >\n                        <div\n                            class=\"number\"\n                        >\n                            09\n                        </div>\n                        <div\n                            class=\"text\"\n                        >\n                            Position the Final Edges\n                        </div>\n                    </div>\n                    <div\n                        class=\"middle9\"\n                    >\n                        <div\n                            class=\"middle9text\"\n                        >\n                            <p>If one of the sides is completely solved, face that side away and perform the appropriate pattern:</p>\n                            <br/>\n                            <p style=\"text-decoration: underline\">Swap top middle edges in clockerwise manner:</p>\n                            <p style=\"font-weight: bold\">F2 U R’ L F2 L’ R U F2</p>\n                            <br/>\n                            <p style=\"text-decoration: underline\">Swap top middle edges in counter-clockwise manner:</p>\n                            <p style=\"font-weight: bold\">F2 U’ R’ L F2 L’ R U’ F2</p>\n                            <br/>\n                            <p>If none of the sides are solved, perform the counter clockwise algorithm once, reposition and then perform the appropriate clockwise or counter-clockwise algorithm.</p>\n                        </div>\n                    </div>\n                    <div\n                        class=\"bottom9\"\n                    >\n                        <img src={finalSolved} alt=\"final positions goes here\" >\n                            <p>Congratulations! You just solved the Rubik’s Cube!</p>\n                    </div>\n                </div>\n\t        </div>\n        </div>\n\t</section>\n</main>\n\n\n<style>\n\n    main {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\twidth: 100%;\n\t\tmargin: 0 auto;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\t.left {\n        width: 340px;\n        margin-top: 100px;\n\t}\n\n\t.right {\n        width: 100%;\n        /* margin-top: 100px; */\n        margin-left: 45px;\n        margin-right: 45px;\n    }\n    \n    .track {\n        margin-left: 28px;\n    }\n\n    img {\n        margin-bottom: 50px;\n        margin-top: 25px;\n    }\n\n    ul {\n        list-style: none;\n        font-family: 'Helvetica Neue';\n        text-align: left;\n        margin-top: 50px;\n        padding-left: 0;\n        position: fixed;\n        border-spacing: 0;\n        /* cursor: pointer !important; */\n    }\n    li {\n        list-style: none;                \n        font-family: 'Helvetica Neue';\n        margin-bottom: 35px;\n        cursor: pointer !important;\n        border-spacing: 0;\n    }\n\n    li:hover {\n        /* font-weight: bold; */\n        color: #E1494A\n    }\n\n    .headerContainer1{\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        margin-top: 130px;\n    }\n    .headerContainer{\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        margin-top: 107px;\n    }\n\n    .number {\n        font-size: 60px;\n        font-family: 'Helvetica Neue';\n        color: lightgrey;\n        font-size: 76px;\n        color: lightgrey;\n        font-weight: bolder;\n    }\n\n    .text {\n        margin-left: 37px;\n        margin-bottom: 20px;\n        margin-top: -37px;\n        position: relative;\n        font-size: 40px;\n        font-weight: normal;\n    }\n\n    .step1 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n    }\n    .middle1 {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n    }\n    .bottom1 {\n        padding-top: 25px;\n        margin-bottom: 25px;\n    }\n    .step2 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n    }\n    \n    .middle2 {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .middle2text {\n        max-width: 58%;\n        text-align: justify;\n    }\n    .bottom2 {\n        margin-bottom: 25px;\n    }\n    .step3 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n\n    }\n    .middle3 {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .middle3text {\n        max-width: 58%;\n        text-align: justify;\n    }\n    .bottom3 {\n        margin-bottom: 25px;\n    }\n    .step4 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n\n    }\n    .middle4 {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .middle4text {\n        max-width: 58%;\n        text-align: justify;\n    }\n    .bottom4 {\n        margin-bottom: 25px;\n    }\n    .step5 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n        \n    }\n    .middle5 {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .middle5text {\n        max-width: 58%;\n        text-align: justify;\n    }\n    .bottom5 {\n        margin-bottom: 25px;\n    }\n    .step6 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n    }\n    .middle6 {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .middle6text {\n        max-width: 58%;\n        text-align: justify;\n    }\n    .bottom6 {\n        margin-bottom: 25px;\n    }\n    .step7 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n    }\n    .middle7{\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .middle7text {\n        max-width: 58%;\n        text-align: justify;\n    }\n    .bottom7 {\n        margin-bottom: 25px;\n    }\n    .step8 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n    }\n    .middle8 {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .middle8text {\n        max-width: 58%;\n        text-align: justify;\n    }\n    .bottom8 {\n        margin-bottom: 25px;\n    }\n    .step9 {\n        min-height: 250px;\n        font-family: 'Helvetica Neue';\n        display: flex;\n        flex-direction: column;\n    }\n    .middle9 {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n    }\n    .middle9text {\n        /* max-width: 58%; */\n        text-align: justify;\n    }\n    .bottom9 {\n        margin-bottom: 25px;\n    }\n</style>\n\n","// utility functions used in the project\n// prepend a zero to integers smaller than 10 (used for the second and minute values)\nfunction zeroPadded(number) {\n    return number >= 10 ? number.toString() : `0${number}`;\n}\n// consider the last digit of the input number (used for the tenths of seconds)\nfunction lastDigit(number) {\n    return number.toString()[number.toString().length - 1];\n}\n\n/* format time in the following format\nmm:ss:t\nzero padded minutes, zero padded seconds, tenths of seconds\n*/\nexport function formatTime(milliseconds) {\n    const mm = zeroPadded(Math.floor(milliseconds / 1000 / 60));\n    const ss = zeroPadded(Math.floor(milliseconds / 1000) % 60);\n    const t = lastDigit(Math.floor(milliseconds / 100));\n    return `${mm}:${ss}.${t}`;\n}","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","<script>\n    import { formatTime } from \"./utils.js\";\n    import { tweened } from \"svelte/motion\";\n\n    // lapse refers to the number of milliseconds in the stopwatch\n    export let lapse = 0;\n\n    // rotation refers to the degrees applied to the minutes dial to have a full rotation for 60 seconds\n    // multiply the value by 60 for the seconds dial to have a full rotation every second\n    $: rotation = ((lapse / 1000 / 60) * 360) % 360;\n\n    // this is a very imperfect way to have the dials rotate smoothly back to 0\n    // set a transition on the minutes and seconds dial, but only when lapse is set to 0\n    // remove it when lapse is then more than 0\n    let seconds;\n    let minutes;\n    // to avoid constantly setting transition to none add a boolean to short-circuit the second conditional\n    let transitioned;\n\n    // minutes and seconds are undefined by default\n    $: if (!lapse && minutes && seconds) {\n        minutes.style.transition = \"transform 0.2s ease-in-out\";\n        seconds.style.transition = \"transform 0.2s ease-in-out\";\n        transitioned = false;\n    }\n    $: if (lapse && !transitioned) {\n        minutes.style.transition = \"none\";\n        seconds.style.transition = \"none\";\n        transitioned = true;\n    }\n</script>\n\n<style>\n    svg {\n        font-family: \"Roboto Mono\", monospace;\n        color: hsl(0, 0%, 5%);\n    }\n</style>\n<svg viewBox=\"0 0 100 100\" width=\"300\" height=\"300\">\n    <g transform=\"translate(50 50)\">\n        <circle id=\"dial\" cx=\"0\" cy=\"0\" r=\"42\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"5\" stroke-dasharray=\"0.3 1.898\"></circle>\n        <use href=\"#dial\" transform=\"scale(-1 1)\"></use>\n\n        <!-- include the number of milliseconds in the rotation of the minutes dial\n        1 full rotation for every 60 seconds\n        -->\n        <g bind:this=\"{minutes}\" transform=\"rotate({rotation})\">\n            <g transform=\"translate(0 -50)\">\n                <path d=\"M -2.25 0 h 4.5 l -2.25 2.5 l -2.25 -2.5\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"1\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path>\n            </g>\n        </g>\n\n        <g transform=\"translate(0 20)\">\n            <!-- include the number of milliseconds in the rotation of the minutes dial\n            1 full rotation for every single second\n            -->\n            <g bind:this=\"{seconds}\" transform=\"rotate({(rotation * 60) % 360})\">\n                <path d=\"M 0 -1 v -4.5\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"0.4\" stroke-linejoin=\"round\" stroke-linecap=\"round\"></path>\n            </g>\n            <circle r=\"7\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"0.4\"></circle>\n            <circle r=\"1\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"0.4\"></circle>\n        </g>\n\n        <text text-anchor=\"middle\" fill=\"currentColor\" dominant-baseline=\"middle\" font-size=\"10\" style=\"font-weight: 300; letter-spacing: 1px;\">\n            {formatTime(lapse)}\n        </text>\n    </g>\n</svg>\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { cubicOut } from '../easing';\nimport { is_function } from '../internal';\n\nfunction flip(node, animation, params) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const scaleX = animation.from.width / node.clientWidth;\n    const scaleY = animation.from.height / node.clientHeight;\n    const dx = (animation.from.left - animation.to.left) / scaleX;\n    const dy = (animation.from.top - animation.to.top) / scaleY;\n    const d = Math.sqrt(dx * dx + dy * dy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(d) : duration,\n        easing,\n        css: (_t, u) => `transform: ${transform} translate(${u * dx}px, ${u * dy}px);`\n    };\n}\n\nexport { flip };\n","<script>\n    // import fly to introduce new list items from the top\n    import { fly } from \"svelte/transition\";\n    // import flip to animate the remaining list items toward their new position\n    import { flip } from \"svelte/animate\";\n\n    import { formatTime } from \"./utils.js\";\n\n    export let laps = [];\n</script>\n<style>\n    /* limit the height of the unordered list */\n    ul {\n        list-style: none;\n        height: 200px;\n        overflow-y: auto;\n        padding: 0 0.5rem; /* horizontal padding included for the scrollbar */\n    }\n    /* display each list item in a row */\n    ul li {\n        display: flex;\n        align-items: center;\n        border-bottom: 1px solid hsl(0, 0%, 70%);\n        padding: 0.75rem 0;\n    }\n    ul > li + li {\n        margin-top: 1rem;\n    }\n    /* separate the space of each row equally among the direct children (the h2, h3 and h4 elements */\n    ul li > * {\n        font-weight: 400;\n        width: 0;\n        flex-grow: 1;\n    }\n    ul li h2 {\n        text-align: left;\n        font-size: 1rem;\n    }\n    ul li h2 sup {\n        font-size: 0.75rem;\n        margin-left: -0.25rem;\n    }\n    ul li h3 {\n        text-align: center;\n        font-size: 1.15rem;\n    }\n    ul li h4 {\n        text-align: right;\n        font-size: 0.75rem;\n    }\n\t\n\t\t/* for -webkit supported browsers style the scrollbar closer to the overall ui */\n\t\tul::-webkit-scrollbar {\n\t\t\t\twidth: 6px;\n\t\t}\n\t\tul::-webkit-scrollbar-track {\n\t\t\t\tborder-radius: 3px;\n\t\t\t\tbackground: hsl(0, 0%, 80%);\n\t\t}\n\t\tul::-webkit-scrollbar-thumb {\n\t\t\t\tbackground-color: hsl(0, 0%, 30%);\n\t\t\t\tborder-radius: 3px;\n\t\t}\n</style>\n\n<!-- use lap.total as a unique key to differentiate between the items -->\n<ul>\n    {#each laps as lap (lap.total)}\n    <li in:fly=\"{{ y: -20, duration: 300, delay: 50 }}\" animate:flip=\"{{ duration: 350 }}\">\n        <h2>Lap <sup>{lap.number}</sup></h2>\n        <h3>{formatTime(lap.total)}</h3>\n        <h4>+{formatTime(lap.partial)}</h4>\n    </li>\n    {/each}\n</ul>\n","<script>\n    // dispatch start/stop/pause/lap events following a click on the button\n    import { createEventDispatcher } from \"svelte\";\n    const dispatch = createEventDispatcher();\n\n    // following a click on the buttons dispatch the matching events\n    function start() {\n        dispatch(\"start\");\n    }\n    function stop() {\n        dispatch(\"stop\");\n    }\n    function pause() {\n        dispatch(\"pause\");\n    }\n    function lap() {\n        dispatch(\"lap\");\n    }\n\n    // consider the booleans passed down from App.svelte\n    export let subscription;\n    export let lapsed;\n</script>\n<style>\n    /* display the button(s) in a row */\n    div {\n        display: flex;\n        border: 1px solid hsl(0, 0%, 25%);\n        border-radius: 20px;\n    }\n    div button {\n        font-size: 0.9rem;\n        color: hsl(0, 0%, 10%);\n        font-family: inherit;\n        padding: 0.5rem;\n        flex-grow: 1;\n        width: 0;\n        border: none;\n        background: none;\n        border-radius: inherit;\n        margin: 0; /* by default svelte applies a margin to the bottom of the button */\n        transition: background 0.2s ease-out;\n    }\n    /* include a border on all button but the first, to avoid a border when only one element exist */\n    div button:not(:first-of-type) {\n        border-left: 1px solid hsl(0, 0%, 25%);\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n    }\n\n    div button:focus {\n        outline-color: hsl(0, 0%, 25%);\n    }\n    div button:hover {\n        background: hsl(0, 0%, 92%);\n    }\n</style>\n\n<!-- depending on the value of subscription and lapsed display different controls\nsubscription -> Lap & pause\n    otherwise, lapsed -> Reset & continue\n        otherwiose -> Start\n-->\n<div class=\"controls\">\n    {#if subscription}\n    <button on:click=\"{lap}\">Lap</button>\n    <button on:click=\"{pause}\">Pause</button>\n    {:else if lapsed}\n    <button on:click=\"{stop}\">Reset</button>\n    <button on:click=\"{start}\">Continue</button>\n    {:else}\n    <button on:click=\"{start}\">Start</button>\n    {/if}\n</div>\n","import { readable } from 'svelte/store';\n\n// set up a readable store which returns the number of milliseconds between the moment the store is subscribed and following an interval\nexport const time = readable(0, function start(set) {\n\tconst beginning = new Date();\n\tconst beginningTime = beginning.getTime();\n\n\tconst interval = setInterval(() => {\n\t\tconst current = new Date();\n\t\tconst currentTime = current.getTime();\n\t\tset(currentTime - beginningTime);\n\t}, 10);\n\n\treturn function stop() {\n\t\t// ! forcedly set the readable value to 0 before clearing the interval\n\t\t// it seems the store would otherwise retain the last value and the application would stagger from this value straight to 0\n\t\tset(0);\n\t\tclearInterval(interval);\n\t};\n});","<script>\n    import { onDestroy } from 'svelte';\n\timport Stopwatch from './Stopwatch.svelte';\n\timport Laps from './Laps.svelte';\n\timport Controls from './Controls.svelte';\n\n\t// import the number of milliseconds from the readable stores\n\timport { time } from './stores.js';\n\n    // lapse is set to consider the time since the start button is first pressed\n    let lapse = 0;\n\t// previous is set to record the time accumulated before the pause button is pressed\n    let previous = 0;\n\n    // unsubscribe is set to refer to the function used to unsubscribe from the store\n    let unsubscribe;\n\n    // through the start function pair the lapse variable to the time retrieved from the readable store\n    function start() {\n        // assign the stop function to unsubscribe\n        unsubscribe = time.subscribe(value => {\n            // add the previous value to the current number of milliseconds\n            lapse = value + previous;\n        });\n    }\n\n    // through the terminate function unsubscribe from the readable store\n    function terminate() {\n        // check if unsubscribe is truthy (this to cover the situation in which the stop button is pressed after the pause button)\n        if (unsubscribe) {\n            unsubscribe();\n            unsubscribe = null;\n        }\n    }\n\n    // through the stop function unsubscribe from the readable store and reset the values\n    function stop() {\n        lapse = 0;\n        previous = 0;\n\n        laps = [];\n        terminate();\n    }\n\n    // through the pause function unsubscribe from the store and set previous to match the value held by lapse\n    function pause() {\n        previous = lapse;\n        terminate();\n\t}\n\n    // describe the booleans to determine the button(s) included in the controls component\n    // subscription refers to the state in which the start button has been pressed\n    // here the subscription is ongoing and the unsubscribe variable holds a truthy value\n    $:subscription = !!unsubscribe;\n    // lapsed refers to the state in which the subscription  has started and lapse holds a value greater than 0\n    $:lapsed = !!lapse;\n\n\t// laps refers to an array describing the number of milliseconds after each lap\n\tlet laps = [];\n\n    // through the lap function include an object specifying the total and partial number of milliseconds\n    function lap() {\n        const { length } = laps;\n        const total = lapse;\n        // partial referring to the number of milliseconds between the previous (if existing) and current lap\n        const partial = length > 0 ? total - laps[0].total : total;\n        laps = [{\n            number: length + 1,\n            total,\n            partial,\n        }, ...laps];\n    }\n\n    // unsubscribe from the store to avoid memory leaks\n    onDestroy(() => {\n        terminate();\n    });\n\n</script>\n<style>\n\t/* global styles which would otherwise be placed in the global stylesheet */\n\n\t@import url(\"https://fonts.googleapis.com/css?family=Roboto+Mono:300|Open+Sans:400&display=swap\");\n\n\t:global(*) {\n\t\t\tbox-sizing: border-box;\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t}\n\n\t:global(body) {\n\t\t\t/* background: hsl(0, 0%, 95%); */\n\t\t\tcolor: hsl(0, 0%, 20%);\n\t\t\tfont-family: \"Open Sans\", sans-serif;\n\t\t\t/* center the .stopwatch container in the viewport */\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\t/* min-height: 100vh; */\n\t}\n\t\n\t/* display the content of the .stopwatch container in a column */\n\t:global(.stopwatch) {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tmargin-top: 150px;\n\t}\n\t:global(.stopwatch > * + *) {\n\t\t\tmargin-top: 0.75rem;\n\t}\n\t\n\t/* for devices supporting css grid */\n\t@supports (display: grid) {\n\t\t\t/* for larger viewports */\n\t\t\t@media (min-width: 600px) {\n\t\t\t\t\t/* display the svg, ul and .controls in a grid\n\n\t\t\t\t|   svg  |  ul           |\n\t\t\t\t|   svg  |   .controls   |\n\t\t\t*/\n\t\t\t\t\t:global(.stopwatch) {\n\t\t\t\t\t\t\tdisplay: grid;\n\t\t\t\t\t\t\tgrid-gap: 20px 50px;\n\t\t\t\t\t\t\tgrid-template-columns: 300px 250px;\n\t\t\t\t\t\t\tgrid-template-rows: 225px auto;\n\t\t\t\t\t\t\tgrid-template-areas: \"watch list\" \"watch controls\";\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t}\n\t\t\t\t\t:global(.stopwatch svg) {\n\t\t\t\t\t\t\tgrid-area: watch;\n\t\t\t\t\t\t\talign-self: center;\n\t\t\t\t\t}\n\t\t\t\t\t:global(.stopwatch ul) {\n\t\t\t\t\t\t\tgrid-area: list;\n\t\t\t\t\t}\n\t\t\t\t\t:global(.stopwatch .controls) {\n\t\t\t\t\t\t\tgrid-area: controls;\n\t\t\t\t\t\t\talign-self: center;\n\t\t\t\t\t}\n\t\t\t\t\t:global(.stopwatch > * + *) {\n\t\t\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\t}\n\t\t\t}\n\t}\n\n</style>\n\n<div class=\"stopwatch\">\n    <!-- pass the number of milliseconds to the stopwatch component -->\n    <Stopwatch {lapse} />\n    <!-- pass the array of laps to the laps component -->\n    <Laps {laps} />\n    <!-- following the events disaptched from the controls component call the start/pause/stop/lap function\n    pass the necessary booleans to display the correct button(s)\n    -->\n\t<Controls on:start={start} on:stop={stop} on:pause={pause} on:lap={lap} {subscription} {lapsed} />\n</div>\n","<script>\n\texport let name;\n\timport Nav from './Nav.svelte';\n\timport Steps from './Steps.svelte';\n\timport Timer from './Timer/App2.svelte'\n\tlet page\n\n</script>\n\n\n<Nav bind:page/>\n{#if page === 'Home'}\n<main>\n\t<Steps />\n</main>\n{:else if page === 'Timer'}\n<main>\n\t<Timer />\n</main>\n{/if}\n\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","style","setProperty","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","fix_position","getComputedStyle","position","width","height","getBoundingClientRect","left","top","transform","add_transform","set_current_component","component","get_current_component","Error","createEventDispatcher","callbacks","$$","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","dirty","ctx","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","transition_in","block","local","transition_out","o","d","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","abort","started","then","fix_and_destroy_block","lookup","destroy_block","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","this","$destroy","index","splice","src","page","setPage","YouTubeIframeAPIReady","player","divId","parseInt","Math","random","toString","videoId","onPlayerStateChange","ytTagUrl","url","scripts","getElementsByTagName","isMyScriptLoaded","tag","firstScriptTag","createPlayer","YT","Player","events","onStateChange","onYouTubeIframeAPIReady","Event","playVideo","daisy","whiteCross","whiteTopCorner","whiteTopFaceCorner","whiteBottomRow","whiteBottomLeft","secondLayer","secondLayerStuck","yellowCrossNoEdge","yellowCrossStraightLine","yellowCrossL","yellowCrossComplete","yellowFaceFish","yellowFaceNoFish","cornersNoMatching","cornersMatching","finalSolved","steps","scrollIntoView","behavior","zeroPadded","number","formatTime","milliseconds","floor","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","subscribe","invalidate","subscriber","cubicOut","seconds","minutes","transitioned","lapse","rotation","transition","fly","y","opacity","target_opacity","od","u","flip","scaleX","clientWidth","scaleY","clientHeight","dx","to","dy","sqrt","_t","total","partial","right","bottom","end","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","laps","subscription","lapsed","time","beginningTime","getTime","interval","setInterval","currentTime","clearInterval","unsubscribe","terminate","undefined","r","body"],"mappings":"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"}